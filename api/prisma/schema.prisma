generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Room {
  id         String   @id @default(cuid())
  name       String
  inviteCode String?  @unique
  maxPlayers Int
  members    Member[]
  rounds     Round[]
  createdAt  DateTime @default(now())
}

model Member {
  id        String   @id @default(cuid())
  name      String
  uuid      String
  roomId    String
  role      Role
  
  room      Room     @relation(fields: [roomId], references: [id], onDelete: Cascade)
  snapshots RoundSnapshot[]

  createdAt DateTime @default(now())
  @@index([roomId])
  @@index([uuid])
  @@unique([roomId, uuid])
}

enum Role {
  host
  guest
}

model Round {
  id        String   @id @default(cuid())
  roomId    String
  index     Int
  allCorrect Boolean?
  createdAt DateTime @default(now())

  room      Room     @relation(fields: [roomId], references: [id], onDelete: Cascade)
  snapshots RoundSnapshot[]

  @@index([roomId])
  @@unique([roomId, index])
}

model RoundSnapshot {
  id        String   @id @default(cuid())
  roundId   String
  memberId  String
  png       String?
  judgment  Boolean?
  updatedAt DateTime @default(now())

  round     Round    @relation(fields: [roundId], references: [id], onDelete: Cascade)
  member    Member   @relation(fields: [memberId], references: [id], onDelete: Cascade)

  @@index([roundId])
  @@index([memberId])
  @@unique([roundId, memberId])
}